name: Secure Tournament Runner

on:
  workflow_dispatch:
    inputs:
      tournament_id:
        description: 'Tournament ID to run'
        required: true
        default: 'billion-rows-challenge'
      max_participants:
        description: 'Maximum number of participants'
        required: false
        default: '100'
      timeout_minutes:
        description: 'Tournament timeout in minutes'
        required: false
        default: '60'

jobs:
  secure-tournament:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install -g firebase-tools
        sudo apt-get update
        sudo apt-get install -y docker.io
        
    - name: Build secure containers
      run: |
        echo "Building secure tournament containers..."
        docker build -t billion-rows-secure ./docker/security/
        
    - name: Run security validation
      run: |
        echo "Running security validation..."
        chmod +x ./docker/security/validate-submission.sh
        ./docker/security/validate-submission.sh
        
    - name: Setup tournament environment
      run: |
        echo "Setting up secure tournament environment..."
        export TOURNAMENT_ID=${{ github.event.inputs.tournament_id }}
        export MAX_PARTICIPANTS=${{ github.event.inputs.max_participants }}
        export TIMEOUT_MINUTES=${{ github.event.inputs.timeout_minutes }}
        
    - name: Run tournament
      run: |
        echo "Starting secure tournament..."
        chmod +x ./scripts/run_tournament_secure.sh
        ./scripts/run_tournament_secure.sh \
          --tournament-id ${{ github.event.inputs.tournament_id }} \
          --max-participants ${{ github.event.inputs.max_participants }} \
          --timeout ${{ github.event.inputs.timeout_minutes }}
          
    - name: Collect results
      if: always()
      run: |
        echo "Collecting tournament results..."
        mkdir -p ./results
        cp -r ./data/results/* ./results/ || true
        
    - name: Upload results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tournament-results-${{ github.event.inputs.tournament_id }}
        path: ./results/
        retention-days: 30
        
    - name: Update leaderboard
      if: success()
      run: |
        echo "Updating leaderboard..."
        # Add leaderboard update logic here
        
    - name: Cleanup
      if: always()
      run: |
        echo "Cleaning up tournament environment..."
        docker system prune -f
        docker volume prune -f
